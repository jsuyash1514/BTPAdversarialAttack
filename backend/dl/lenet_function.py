# -*- coding: utf-8 -*-
"""lenet_function.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RGM3p70BBM6oBNu-_BqQfiaVtGHEKryQ
"""

def lenet_model(imgpath):
  import tensorflow.keras as keras
  # from keras.models import Sequential
  # from keras import models,layers
  import numpy as np
  from tensorflow.keras.models import model_from_json
  from PIL import Image
  from numpy import asarray

  # loading model
  # load json and create model
  json_file = open('./dl/Le_netmodel.json', 'r')
  loaded_model_json = json_file.read()
  json_file.close()
  loaded_model = model_from_json(loaded_model_json)
  # load weights into new model
  loaded_model.load_weights("./dl/le_netmodel.h5")
  # print("Loaded model from disk")

  img = Image.open(imgpath)
  numpydata = asarray(img)
  print(numpydata)
  prvdimg = numpydata/255.0
  prvdimg2=prvdimg.reshape(1,28,28,1)
  resclass=loaded_model.predict_classes(prvdimg2)
  res=loaded_model.predict(prvdimg2)
  totalsum=0.0
  prdprob=[]
  for i in res[0]:
    totalsum+=i


  for i in res[0]:
    prdprob.append(i/totalsum)

  return resclass[0],max(prdprob)

prdclass,acc=lenet_model('./dl/2adv.jpg')
print(prdclass,acc)

